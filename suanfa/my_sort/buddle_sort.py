# 冒泡排序算法
# 其实属于是不断确认目前的最小值的算法
'''
冒泡的过程只涉及到相邻的元素的交换小操作， 只需要常量级别的临时空间，所以其空间复杂度为 O(1) 。
在冒泡排序中，只要交换才可以改变两个元素的前后顺序。为了保证冒泡排序算法的稳定性，
当有相邻两个元素的大小相等的时候，我们不会做交换。
（换句话说，当我们希望是不稳定时，我们可以将前面代码里面的判断条件改为 if new_list[i] >= new_list[j]。 ）
相同大小的数据排序前后不会改变顺序， 所以冒泡排序是稳定的排序算法。

'''


def buddle(lst: list):
    for i in range(len(lst)):
        for j in range(i + 1, len(lst)):
            print(f"第 {j} 次 需要交换的元素是 {lst[i]} 和 {lst[j]}")
            if lst[i] > lst[j]:
                # 交换两个元素的位置
                lst[i], lst[j] = lst[j], lst[i]
            print(lst)
            print()


if __name__ == '__main__':
    ll = [3, 4, 1, 2, 6]
    ll = [10, 7, 8, 4, 3, 1, 6, 9, 8]
    buddle(ll)
